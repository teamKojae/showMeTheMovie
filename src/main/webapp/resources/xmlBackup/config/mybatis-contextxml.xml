<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring 
							http://mybatis.org/schema/mybatis-spring-1.2.xsd 
							http://www.springframework.org/schema/beans 
							https://www.springframework.org/schema/beans/spring-beans.xsd
							http://www.springframework.org/schema/context 
							http://www.springframework.org/schema/context/spring-context-4.3.xsd
							http://www.springframework.org/schema/aop
	        				http://www.springframework.org/schema/aop/spring-aop.xsd
							http://www.springframework.org/schema/tx 
							http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Mybatis 설정 -->
	<context:property-placeholder
		location="classpath:config/jdbc.properties" />

	<!-- 되는것 <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig"> 
		<property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property> 
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/movie?characterEncoding=UTF-8&amp;serverTimezone=Asia/Seoul"></property> 
		<property name="username" value="root"></property> <property name="password" 
		value="1234"></property> </bean> -->

	
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName"
			value="${jdbc.driverClassName}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		destroy-method="close">
		<constructor-arg ref="hikariConfig" />
	</bean>

	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:sql/**/*Dao.xml"></property>
		<property name="typeAliasesPackage" value="com/show/movie/model" />
		<!-- <property name="configLocation" value="classpath:/mybatis-config.xml"></property> -->
	</bean>

<!-- 	<mybatis-spring:scan base-package="com.show.movie.mapper" />  -->
	<mybatis-spring:scan base-package="com.show.movie.dao" />  

	<!-- 트랜잭션 설정 -->

	<tx:annotation-driven />
	<!-- 트랜잭션 관련 AOP설정 -->
	<bean id="pojoAspectJ" class="com.show.movie.service.PojoAspectJ" />

	
	<aop:config>
		<aop:aspect ref="pojoAspectJ">
			<aop:around method="invoke" pointcut="execution(* com.show.movie.dao..*(..))" />
		</aop:aspect>
	</aop:config>
<!-- 
	<aop:config>
		<aop:aspect ref="pojoAspectJ">
			<aop:around method="invoke"
				pointcut="execution(* com.show.movie.service.impl.*ServiceImpl*.*(..))" />
		</aop:aspect>
	</aop:config> -->

	<!-- 트랜잭션 매니저  및 트랜잭션 설정 -->
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="get*" read-only="true"/> -->
			<!-- 실험용 .. -->
			<tx:method name="insertNewUser" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution(* com.show.movie.dao..*(..))"
			id="requiredTx" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="requiredTx" />
	</aop:config>
<!-- 
	<aop:config>
		<aop:pointcut
			expression="execution(* com.show.movie.service.*.*(..))"
			id="requiredTx" />
		<aop:advisor advice-ref="txAdvice"
			pointcut-ref="requiredTx" />
	</aop:config>
 -->


</beans>
