<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.show.movie.model.dao.ViewTableDAO">

	<!-- View Table 있는지 확인 : 있으면 1 리턴 -->
	<select id="isView" resultType="int" >
		SELECT COUNT(*) countView FROM
		information_schema.tables
		WHERE table_schema = 'movie' AND table_name = #{viewTableName}
	</select>

	<!-- return : void -->
	<!-- 예매페이지에서 영화상영정보 보여주는 View -->
	<select id="createViewGetMovieInfo">
			CREATE VIEW getMovieInfo AS 
			SELECT movie.movieName,movie.moviePoster,
			movieInfo.movieStartTime, movieInfo.movieEndTime, movieInfo.movieInfoCode,
			branch.branchName, theater.theaterleftSeat,
			theater.theaterAllSeat,theater.theaterCode,
			theater.theaterName,movieInfo.movieDate
			FROM movie AS movie , movieInfo AS movieInfo, theater AS theater, branch AS branch
			WHERE theater.theaterCode = movieinfo.theaterCode
			AND movieinfo.movieCode = movie.movieCode 
			AND theater.branchCode = branch.branchCode 
			ORDER BY movieStartTime ASC;
	</select>
	
		<!-- 영화페이지 ViewTable -->
	<select id="createViewMoviePageList">
		CREATE VIEW moviePageList AS
        SELECT movie.movieCode, movie.movieName, movie.movieAudience, movie.movieUpdate, movie.movieSynopsis,
		movie.moviePoster, movie.moviePosterBG, movie.movieImages,
		ranking.movieTicketRate
		FROM movie,
		(SELECT movieCode, Rank() over(order by movieAudience DESC) as movieTicketRate FROM movie) AS ranking
		 WHERE movie.movieCode = ranking.movieCode
         ORDER BY ranking.movieTicketRate
	</select>

	<select id="createViewTimeSchedule">
		CREATE VIEW timeSchedule AS
		SELECT theater.theaterCode,theater.theaterName,
		movie.movieCode, movie.movieName, movie.movieTime,
		movieInfo.movieDate, movieInfo.movieStartTime, movieInfo.movieEndTime
		FROM movie, theater, movieInfo
		WHERE movie.movieCode = movieInfo.movieCode
		AND theater.theaterCode = movieInfo.theaterCode
		ORDER BY movieInfo.movieStartTime
	</select>
	
	<select id="createViewGetBooking">
		Create View getBooking AS SELECT 
		booking.bookingCode, 
		booking.bookingSeat,
		booking.bookingState,
		movie.movieName, 
		movie.moviePoster,
		branch.branchName, 
		theater.theaterName, 
		movieInfo.movieDate, 
		movieInfo.movieStartTime , 
		booking.bookingDate, 
		booking.bookingPeople, 
		booking.userId 
		from booking, movieInfo, theater, branch , user, movie 
		where booking.userId = user.userId 
		AND movieInfo.movieCode = movie.movieCode 
		AND movieInfo.movieInfoCode = booking.movieInfoCode 
		AND theater.theaterCode = movieInfo.theaterCode 
		AND branch.branchCode = theater.branchCode
	</select>

	<select id="createViewCancellation">
		Create View cancellation AS 
		SELECT 
		movie.movieName,
		branch.branchName,movieInfo.movieDate,
		movieInfo.movieStartTime,booking.bookingPrice,booking.cancelDate,
		user.userId
		from movie, branch, theater, movieInfo, booking , user
		where movieInfo.movieInfoCode = booking.movieInfoCode 
		AND movieInfo.movieCode = movie.movieCode
		AND movieInfo.theaterCode = theater.theaterCode
		AND theater.branchCode = branch.branchCode
		AND booking.userId=user.userId
		AND booking.bookingState='1' 
	</select>
</mapper> 
  
  